---
import { pb, getAllPlaces, getAllPlacesForUser } from "../lib/pocketbase.mjs";
import PlacesInteraction from "./SetPlacesInteraction.jsx";
import PlaceCarousel from "../components/PlaceCarousel.astro";

const places = await getAllPlaces();
const userId = pb.authStore?.record?.id;
const userInteractions = userId ? await getAllPlacesForUser(userId) : [];
const interactionsMap = new Map();

userInteractions.forEach(
  ({
    lieu,
    like,
    save,
    share,
  }: {
    lieu: string;
    like: boolean;
    save: boolean;
    share: boolean;
  }) => {
    if (lieu) {
      interactionsMap.set(lieu, {
        like: !!like,
        save: !!save,
        share: !!share,
      });
    }
  }
);
---

<div
  id="app-header"
  class="bg-zinc-950/95 py-3 px-4 sticky top-16 z-40 border-b border-zinc-700/50 shadow-md backdrop-blur-sm"
>
  <div class="flex items-center justify-between max-w-screen-lg mx-auto">
    <a
      href="/places-filter"
      class="px-3 py-1.5 rounded-full bg-(--color-blue) text-white text-xs sm:text-sm font-medium hover:opacity-90 hover:scale-105 active:scale-95 shadow-md transition-all"
    >
      Filtrer
    </a>
    <a
      href="/create-place"
      class="p-2 rounded-full bg-(--color-blue) text-white hover:opacity-90 hover:scale-105 active:scale-95 shadow-lg"
      aria-label="Créer un lieu"
    >
      <svg
        xmlns="http://www.w3.org/2000/svg"
        class="w-4 h-4 sm:w-5 sm:h-5"
        fill="none"
        viewBox="0 0 24 24"
        stroke="currentColor"
        stroke-width="2"
      >
        <path stroke-linecap="round" stroke-linejoin="round" d="M12 4v16m8-8H4"
        ></path>
      </svg>
    </a>
  </div>
</div>

<div
  id="places-container"
  class="h-[calc(92dvh-var(--header-height))] overflow-y-auto overscroll-contain snap-y snap-mandatory bg-zinc-950"
  data-vertical-scroll="true"
>
  {
    places.map((place: any, index: number) => {
      const ui = interactionsMap.get(place.id) || {
        like: false,
        save: false,
        share: false,
      };
      const creator = place.expand?.createur || {};
      const avatar =
        !creator.prive && place.creatorAvatar
          ? place.creatorAvatar
          : "/user_2.svg";

      return (
        <div
          id={`place-${index}`}
          class="relative flex flex-col snap-start snap-always h-full bg-zinc-900 border-b border-zinc-800"
        >
          <div class="flex items-center gap-4 px-4 sm:px-6 py-3">
            <img
              src={avatar}
              alt="Avatar"
              class="w-10 h-10 sm:w-11 sm:h-11 rounded-full flex-shrink-0"
              loading="lazy"
            />
            <div class="text-left text-xs sm:text-sm text-white min-w-0">
              <p class="font-semibold truncate">
                {!creator.prive
                  ? `${creator.prenom} ${creator.nom}`
                  : "Utilisateur anonyme"}
              </p>
              <p class="text-zinc-400 text-xs">Il y a 12h</p>
              <p class="text-zinc-400 text-xs truncate">{place.adresse}</p>
            </div>
            <button class="ml-auto px-3 py-1 rounded-full border border-(--color-violet) text-(--color-violet) text-xs sm:text-sm hover:bg-(--color-violet)/10 transition-colors duration-150">
              Suivre
            </button>
          </div>
          <div class="absolute right-2 top-1/2 -translate-y-1/2 z-20 flex flex-col gap-3">
            <PlacesInteraction
              placeId={place.id}
              like={ui.like}
              save={ui.save}
              slug={place.slug}
              client:load
            />
          </div>
          <div class="relative w-full max-w-3xl h-[90dvh] mx-auto rounded-xl overflow-hidden">
            <PlaceCarousel images={place.imagesUrls} />

            <div class="absolute right-2 bottom-4 z-20">
              <a
                href={`/places/${place.slug}`}
                class="px-4 py-2 rounded-full bg-black/70 text-white text-xs sm:text-sm shadow-md hover:bg-black/90 transition"
              >
                DÉCOUVRIR CE LIEU
              </a>
            </div>
          </div>
        </div>
      );
    })
  }
</div>

<script>
  document.addEventListener("DOMContentLoaded", () => {
    const header = document.querySelector("#app-header");
    if (header) {
      document.documentElement.style.setProperty(
        "--header-height",
        `${(header as HTMLElement).offsetHeight}px`
      );
    }

    const buttons = document.querySelectorAll("[data-address]");
    buttons.forEach((button) => {
      button.addEventListener("click", () => {
        const address = button.getAttribute("data-address");
        if (!address) return;
        navigator.clipboard.writeText(address).then(() => {
          const original = button.innerHTML;
          button.innerHTML = `<svg class='w-4 h-4 text-white' fill='currentColor' viewBox='0 0 20 20'><path fill-rule='evenodd' d='M16.707 5.293a1 1 0 01.0 1.414l-8 8a1 1 0 01-1.414 0L3.293 9.414a1 1 0 011.414-1.414L8 11.586l7.293-7.293a1 1 0 011.414 0z' clip-rule='evenodd'/></svg>`;
          setTimeout(() => {
            button.innerHTML = original;
          }, 1500);
        });
      });
    });
  });
</script>
