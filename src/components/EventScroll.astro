---
import {
  pb,
  getAllEvents,
  getAllEventsForUser,
  getCategoryName,
} from "../lib/pocketbase.mjs";

const events = await getAllEvents();
const userId = pb.authStore?.record?.id;
const userInteractions = userId ? await getAllEventsForUser(userId) : [];
const interactionsMap = new Map();
userInteractions.forEach(({ evenement, like, save, share }: { evenement: string; like: boolean; save: boolean; share: boolean }) => {
  if (evenement) {
    interactionsMap.set(evenement, {
      like: !!like,
      save: !!save,
      share: !!share,
    });
  }
});
---

<div id="app-header" class="bg-black py-3 w-full">
  <div
    class="flex items-center justify-between px-4 sm:px-8 lg:px-16 max-w-7xl mx-auto"
  >
    <a
      href="/events-filter"
      class="px-3 py-1.5 rounded-full bg-blue-600 text-white text-xs sm:text-sm font-medium transition-colors duration-150 hover:bg-blue-500"
    >
      Filtrer
    </a>
    <a
      href="/create-event"
      class="p-2 rounded-full bg-blue-600 text-white transition-colors duration-150 hover:bg-blue-500"
      aria-label="Créer un nouvel événement"
    >
      <svg
        xmlns="http://www.w3.org/2000/svg"
        class="w-4 h-4 sm:w-5 sm:h-5"
        fill="none"
        viewBox="0 0 24 24"
        stroke="currentColor"
        stroke-width="2"
      >
        <path stroke-linecap="round" stroke-linejoin="round" d="M12 4v16m8-8H4"
        ></path>
      </svg>
    </a>
  </div>
</div>

<div
  id="events-container"
  class="min-h-screen bg-zinc-950 flex flex-col gap-4 sm:gap-6 lg:gap-8 py-4 sm:py-6 lg:py-8 px-3 sm:px-4 md:px-8 lg:px-16 xl:px-32 max-w-7xl mx-auto"
>
  {
    events.length > 0 ? (
      events.map((event: any) => {
        const organizer = event.expand?.createur || {};
        const avatarUrl = organizer.avatar
          ? pb.getFileUrl(organizer, organizer.avatar)
          : "/icons/user_2.svg";

        const parts = event.adresse.split(",").map((p: string) => p.trim());
        const numberAndStreet = parts.slice(0, 2).join(" ");
        const postalIndex = parts.findIndex((p: string) => /^\d{5}$/.test(p));
        const postalCode = postalIndex >= 0 ? parts[postalIndex] : "";
        const city = postalIndex > 0 ? parts[postalIndex - 1] : "";
        const minimalAddress = postalCode
          ? `${numberAndStreet}, ${postalCode} ${city}`
          : numberAndStreet;

        return (
          <article
            id={event.id}
            class="grid grid-cols-1 md:grid-cols-[auto_1fr] gap-4 sm:gap-6 bg-[rgba(255,255,255,0.05)] backdrop-blur-md rounded-xl sm:rounded-2xl lg:rounded-3xl border border-[rgba(255,255,255,0.1)] shadow-xl transition-shadow duration-300 hover:shadow-2xl"
          >
            <div class="md:hidden flex items-center gap-3 pt-4 px-4">
              <img
                src={
                  !organizer.prive && avatarUrl
                    ? avatarUrl
                    : "/icons/user_2.svg"
                }
                alt="Avatar organisateur"
                class="w-10 h-10 rounded-full ring-2 ring-violet-500 object-cover"
                loading="lazy"
              />
              <div>
                <p class="text-sm text-zinc-400">Organisé par</p>
                <p class="text-white font-medium">
                  {organizer.name || "Anonyme"}
                </p>
              </div>
            </div>

            <div class="hidden md:flex items-center justify-center p-4 lg:p-6">
              <img
                src={
                  !organizer.prive && avatarUrl
                    ? avatarUrl
                    : "/icons/user_2.svg"
                }
                alt="Avatar organisateur"
                class="w-12 h-12 lg:w-16 lg:h-16 rounded-full ring-2 ring-violet-500 object-cover"
                loading="lazy"
              />
            </div>

            <div class="flex flex-col p-4 lg:p-6">
              <div class="flex flex-col sm:flex-row sm:items-center sm:justify-between gap-2 sm:gap-4 mb-2 sm:mb-4">
                <h2
                  class="text-xl sm:text-2xl lg:text-3xl font-bold text-white"
                  style="font-family: var(--font-title);"
                >
                  {event.titre}
                </h2>
                <span class="px-3 py-1 text-xs sm:text-sm font-semibold rounded-full border border-pink-500 text-pink-500 whitespace-nowrap">
                  {getCategoryName(event.categories[0])}
                </span>
              </div>
              <p class="text-zinc-300 text-sm lg:text-base mb-4 lg:mb-6 line-clamp-3 sm:line-clamp-4">
                {event.description}
              </p>

              <div class="flex flex-col sm:flex-row flex-wrap gap-3 sm:gap-6 mb-4 lg:mb-6">
                <div class="flex items-center gap-2 flex-1 w-fit max-w-full min-w-0 text-zinc-300">
                  <span class="bg-blue-500/10 p-1.5 sm:p-2 rounded-full text-blue-400 flex-shrink-0">
                  </span>
                  <span class="truncate max-w-full overflow-hidden text-xs sm:text-sm lg:text-base">
                    {minimalAddress}
                  </span>

                  <button
  class="ml-auto p-2 bg-pink-500 rounded-full hover:bg-violet-400 transition flex-shrink-0"
  aria-label="Copier l'adresse"
  data-address={event.adresse}
>
  <svg
    xmlns="http://www.w3.org/2000/svg"
    class="w-4 h-4 sm:w-5 sm:h-5 text-white"
    fill="none"
    viewBox="0 0 24 24"
    stroke="currentColor"
    stroke-width="2"
  >
    <path
      stroke-linecap="round"
      stroke-linejoin="round"
      d="M9 5H7a2 2 0 00-2 2v12a2 2 0 002 2h10a2 2 0 002-2V7a2 2 0 00-2-2h-2"
    />
    <!-- Feuille interne -->
    <rect
      x="9"
      y="3"
      width="6"
      height="4"
      rx="1"
      ry="1"
      stroke-linecap="round"
      stroke-linejoin="round"
      stroke-width="2"
    />
  </svg>
</button>

                </div>
                <div class="flex items-center gap-2 text-sm lg:text-base text-zinc-300">
                  <span class="bg-yellow-500/10 p-1.5 sm:p-2 rounded-full text-yellow-400 flex-shrink-0">
                    <svg
                      class="w-4 h-4 sm:w-5 sm:h-5"
                      fill="currentColor"
                      viewBox="0 0 20 20"
                    >
                      <path d="M13 6a3 3 0 11-6 0 3 3 0 016 0zM18 8a2 2 0 11-4 0 2 2 0 014 0zM14 15a4 4 0 00-8 0v3h8v-3zM6 8a2 2 0 11-4 0 2 2 0 014 0zM16 18v-3a5.972 5.972 0 00-.75-2.906A3.005 3.005 0 0119 15v3h-3zM4.75 12.094A5.973 5.973 0 004 15v3H1v-3a3 3 0 013.75-2.906z" />
                    </svg>
                  </span>
                  <span>
                    <span class="font-semibold text-white">
                      {event.participants?.length ?? 0}
                    </span>
                    / {event.participants_max}
                  </span>
                </div>

                <div class="flex items-center gap-2 text-sm lg:text-base text-zinc-300">
                  <span class="bg-green-500/10 p-1.5 sm:p-2 rounded-full text-green-400 flex-shrink-0">
                    <svg
                      class="w-4 h-4 sm:w-5 sm:h-5"
                      fill="currentColor"
                      viewBox="0 0 20 20"
                    >
                      <path
                        fill-rule="evenodd"
                        d="M6 2a1 1 0 00-1 1v1H4a2 2 0 00-2 2v10a2 2 0 002 2h12a2 2 0 002-2V6a2 2 0 00-2-2h-1V3a1 1 0 10-2 0v1H7V3a1 1 0 00-1-1zm0 5a1 1 0 000 2h8a1 1 0 100-2H6z"
                        clip-rule="evenodd"
                      />
                    </svg>
                  </span>
                  <span>{event.date_formattee || "Bientôt"}</span>
                </div>
              </div>

              <a
                href={`/events/${event.slug}`}
                class="mt-auto inline-block w-full text-center py-2 sm:py-3 rounded-full font-medium text-white bg-gradient-to-r from-blue-500 to-pink-500 shadow-lg transition-all duration-200 hover:opacity-90 text-sm sm:text-base"
              >
                En savoir plus
              </a>
            </div>
          </article>
        );
      })
    ) : (
      <div class="flex flex-col items-center justify-center py-12 sm:py-16 text-center">
        <svg
          class="w-16 h-16 sm:w-20 sm:h-20 mb-4 text-violet-400"
          fill="none"
          viewBox="0 0 24 24"
          stroke="currentColor"
        >
          <path
            stroke-linecap="round"
            stroke-linejoin="round"
            stroke-width="1.5"
            d="M9.172 16.172a4 4 0 015.656 0M9 10h.01M15 10h.01M21 12a9 9 0 11-18 0 9 9 0 0118 0z"
          />
        </svg>
        <h3 class="text-base sm:text-lg font-medium text-white mb-2">
          Aucun événement trouvé
        </h3>
        <p class="text-zinc-400">Revenez plus tard ou ajustez vos filtres.</p>
      </div>
    )
  }
</div>

<script>
  document.addEventListener("DOMContentLoaded", () => {
    document.querySelectorAll("[data-address]").forEach((button) => {
      button.addEventListener("click", () => {
        const address = button.getAttribute("data-address");
        if (!address) return;

        navigator.clipboard.writeText(address).then(() => {
          const original = button.innerHTML;
          button.innerHTML = `
            <svg class="w-4 h-4 sm:w-5 sm:h-5 text-white" fill="currentColor" viewBox="0 0 20 20">
              <path fill-rule="evenodd" d="M16.707 5.293a1 1 0 010 1.414l-8 8a1 1 0 01-1.414 0l-4-4a1 1 0 011.414-1.414L8 12.586l7.293-7.293a1 1 0 011.414 0z" clip-rule="evenodd"/>
            </svg>
          `;
          setTimeout(() => {
            button.innerHTML = original;
          }, 1500);
        });
      });
    });
  });
</script>
